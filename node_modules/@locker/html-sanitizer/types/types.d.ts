import type { Config, DOMPurifyI, HookEvent, HookName, SanitizeAttributeHookEvent } from 'dompurify';
export interface DOMPurifyConfig extends Config {
    CUSTOM_ELEMENT_HANDLING?: {
        tagNameCheck?: RegExp | ((tagName: string) => boolean) | null;
        attributeNameCheck?: RegExp | ((tagName: string) => boolean) | null;
        allowCustomizedBuiltInElements?: boolean;
    };
}
export interface DOMPurifyInterface extends DOMPurifyI {
}
export type { HookEvent, HookName, SanitizeAttributeHookEvent };
export declare type HookCallback = (currentNode: Element, data: HookEvent, config: Config) => void;
export declare type HooksRegistry = Record<HookName, HookCallback>;
export declare type NormalizedHref = {
    requestedUrl: string;
    normalizedUrl: string;
    requestedFragment: string;
    normalizedFragment: string;
    protocol: string;
};
//# sourceMappingURL=types.d.ts.map