/// <reference types="dompurify" />
import { sanitizer as getSanitizerForConfig } from './dompurify-wrapper';
import type { DOMPurifyConfig, HookEvent } from './types';
export { getSanitizerForConfig as sanitizer };
export declare function blobSanitizer(): ReturnType<typeof getSanitizerForConfig>;
export declare function svgSanitizer(): ReturnType<typeof getSanitizerForConfig>;
export declare function sanitize(dirty: string): string;
export declare function sanitizeDocument(doc: Document): Document;
export declare function sanitizeHrefAttributeHook(node: Node, data: HookEvent, _config: DOMPurifyConfig): HookEvent;
export declare function sanitizeSvgHref(url: string): string;
export declare function sanitizeSvgInnerHtml(stringOrSvg: string | SVGElement, dirty?: string): string;
export declare function sanitizeSvgTextReturnDOM(dirty: string): DocumentFragment;
export * from './types';
//# sourceMappingURL=index.d.ts.map