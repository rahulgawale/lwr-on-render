import type { Getter, NearMembraneSerializedValue as SerializedValue, ProxyTarget } from '@locker/near-membrane-shared/types';
export interface Activity {
    stop(data?: DataType): void;
    error(data?: DataType): void;
}
export declare type CallableApply = (targetPointer: Pointer, thisArgPointerOrUndefined: PointerOrPrimitive, ...args: PointerOrPrimitive[]) => PointerOrPrimitive;
export declare type CallableBatchGetPrototypeOfAndGetOwnPropertyDescriptors = (targetPointer: Pointer, foreignCallableDescriptorsCallback: CallableDescriptorsCallback) => PointerOrPrimitive;
export declare type CallableBatchGetPrototypeOfWhenHasNoOwnProperty = (targetPointer: Pointer, key: PropertyKey) => PointerOrPrimitive;
export declare type CallableBatchGetPrototypeOfWhenHasNoOwnPropertyDescriptor = (targetPointer: Pointer, key: PropertyKey, foreignCallableDescriptorCallback: CallableDescriptorCallback) => PointerOrPrimitive;
export declare type CallableConstruct = (targetPointer: Pointer, newTargetPointer: PointerOrPrimitive, ...args: PointerOrPrimitive[]) => PointerOrPrimitive;
export declare type CallableDebugInfo = (...args: Parameters<typeof console.info>) => void;
export declare type CallableDefineProperties = (targetPointer: Pointer, ...descriptorTuples: [...Parameters<CallableDescriptorCallback>]) => void;
export declare type CallableDefineProperty = (targetPointer: Pointer, key: PropertyKey, configurable: boolean | symbol, enumerable: boolean | symbol, writable: boolean | symbol, valuePointer: PointerOrPrimitive, getterPointer: PointerOrPrimitive, setterPointer: PointerOrPrimitive, foreignCallableNonConfigurableDescriptorCallback: CallableNonConfigurableDescriptorCallback) => boolean;
export declare type CallableDeleteProperty = (targetPointer: Pointer, key: PropertyKey) => boolean;
export declare type CallableDescriptorCallback = (key: PropertyKey, configurable: boolean | symbol, enumerable: boolean | symbol, writable: boolean | symbol, valuePointer: PointerOrPrimitive, getterPointer: PointerOrPrimitive, setterPointer: PointerOrPrimitive) => void;
export declare type CallableDescriptorsCallback = (...descriptorTuples: [...Parameters<CallableDescriptorCallback>]) => void;
export declare type CallableEvaluate = (sourceText: string) => PointerOrPrimitive;
export declare type CallableGet = (targetPointer: Pointer, targetTraits: number, key: PropertyKey, receiverPointerOrPrimitive: PointerOrPrimitive) => PointerOrPrimitive;
export declare type CallableGetPropertyValue = (targetPointer: Pointer, index: PropertyKey) => PointerOrPrimitive;
export declare type CallableGetLazyPropertyDescriptorStateByTarget = (targetPointer: Pointer) => PointerOrPrimitive;
export declare type CallableGetOwnPropertyDescriptor = (targetPointer: Pointer, key: PropertyKey, foreignCallableDescriptorCallback: CallableDescriptorCallback) => void;
export declare type CallableGetPropertyValuePointer = (targetPointer: Pointer, key: PropertyKey) => Pointer;
export declare type CallableGetPrototypeOf = (targetPointer: Pointer) => PointerOrPrimitive;
export declare type CallableGetTargetIntegrityTraits = (targetPointer: Pointer) => number;
export declare type CallableGetToStringTagOfTarget = (targetPointer: Pointer) => string;
export declare type CallableHas = (targetPointer: Pointer, key: PropertyKey) => boolean;
export declare type CallableInstallErrorPrepareStackTrace = () => void;
export declare type CallableInstallLazyPropertyDescriptors = (targetPointer: Pointer, ...ownKeysAndUnforgeableGlobalThisKeys: PropertyKey[]) => void;
export declare type CallableIsExtensible = (targetPointer: Pointer) => boolean;
export declare type CallableIsTargetLive = (targetPointer: Pointer, targetTraits: number) => boolean;
export declare type CallableIsTargetRevoked = (targetPointer: Pointer) => boolean;
export declare type CallableLinkPointers = (targetPointer: Pointer, foreignTargetPointer: Pointer) => void;
export declare type CallableNonConfigurableDescriptorCallback = CallableDescriptorCallback;
export declare type CallableOwnKeys = (targetPointer: Pointer, foreignCallableKeysCallback: (...args: ReturnType<typeof Reflect.ownKeys>) => void) => void;
export declare type CallablePreventExtensions = (targetPointer: Pointer) => number;
export declare type CallablePushErrorTarget = CallablePushTarget;
export declare type CallablePushTarget = (foreignTargetPointer: () => void, foreignTargetTraits: number, foreignTargetFunctionArity: number, foreignTargetFunctionName: string, foreignTargetTypedArrayLength: number) => Pointer;
export declare type CallableSerializeTarget = (targetPointer: Pointer) => SerializedValue | undefined;
export declare type CallableSetLazyPropertyDescriptorStateByTarget = (targetPointer: Pointer, statePointer: Pointer) => void;
export declare type CallableSet = (targetPointer: Pointer, key: PropertyKey, valuePointerOrPrimitive: PointerOrPrimitive, receiverPointerOrPrimitive: PointerOrPrimitive) => boolean;
export declare type CallableSetPrototypeOf = (targetPointer: Pointer, protoPointerOrNull: Pointer | null) => boolean;
export declare type CallableTrackAsFastTarget = (targetPointer: Pointer) => void;
export declare type Connector = (color: string, foreignCallableHooksCallback: HooksCallback, options?: HooksOptions | undefined) => HooksCallback;
export declare type DataType = boolean | object | number | string;
export declare type DistortionCallback = (target: ProxyTarget) => ProxyTarget;
export interface ForeignPropertyDescriptor extends PropertyDescriptor {
    foreign?: boolean;
}
export declare type GetSelectedTarget = Getter;
export declare type GetTransferableValue = (value: any) => PointerOrPrimitive;
export declare type GlobalThisGetter = () => typeof globalThis;
export declare type HooksCallback = (globalThisPointer: Pointer, getSelectedTarget: GetSelectedTarget, getTransferableValue: GetTransferableValue, callableGetPropertyValuePointer: CallableGetPropertyValuePointer, callableEvaluate: CallableEvaluate, callableLinkPointers: CallableLinkPointers, callablePushErrorTarget: CallablePushErrorTarget, callablePushTarget: CallablePushTarget, callableApply: CallableApply, callableConstruct: CallableConstruct, callableDefineProperty: CallableDefineProperty, callableDeleteProperty: CallableDeleteProperty, callableGet: CallableGet, callableGetOwnPropertyDescriptor: CallableGetOwnPropertyDescriptor, callableGetPrototypeOf: CallableGetPrototypeOf, callableHas: CallableHas, callableIsExtensible: CallableIsExtensible, callableOwnKeys: CallableOwnKeys, callablePreventExtensions: CallablePreventExtensions, callableSet: CallableSet, callableSetPrototypeOf: CallableSetPrototypeOf, callableDebugInfo: CallableDebugInfo, callableDefineProperties: CallableDefineProperties, callableGetLazyPropertyDescriptorStateByTarget: CallableGetLazyPropertyDescriptorStateByTarget, callableGetPropertyValue: CallableGetPropertyValue, callableGetTargetIntegrityTraits: CallableGetTargetIntegrityTraits, callableGetToStringTagOfTarget: CallableGetToStringTagOfTarget, callableInstallErrorPrepareStackTrace: CallableInstallErrorPrepareStackTrace, callableInstallLazyPropertyDescriptors: CallableInstallLazyPropertyDescriptors, callableIsTargetLive: CallableIsTargetLive, callableIsTargetRevoked: CallableIsTargetRevoked, callableSerializeTarget: CallableSerializeTarget, callableSetLazyPropertyDescriptorStateByTarget: CallableSetLazyPropertyDescriptorStateByTarget, callableTrackAsFastTarget: CallableTrackAsFastTarget, callableBatchGetPrototypeOfAndGetOwnPropertyDescriptors: CallableBatchGetPrototypeOfAndGetOwnPropertyDescriptors, callableBatchGetPrototypeOfWhenHasNoOwnProperty: CallableBatchGetPrototypeOfWhenHasNoOwnProperty, callableBatchGetPrototypeOfWhenHasNoOwnPropertyDescriptor: CallableBatchGetPrototypeOfWhenHasNoOwnPropertyDescriptor) => void;
export interface HooksOptions {
    distortionCallback?: DistortionCallback;
    instrumentation?: Instrumentation;
    liveTargetCallback?: LiveTargetCallback;
}
export interface Instrumentation {
    startActivity(activityName: string, data?: DataType): Activity;
    log(data?: DataType): void;
    error(data?: DataType): void;
}
export declare type LiveTargetCallback = (target: ProxyTarget, targetTraits: number) => boolean;
export declare type Pointer = CallableFunction;
export declare type PointerOrPrimitive = Pointer | Primitive;
export declare type Primitive = bigint | boolean | null | number | string | symbol | undefined;
export type { SerializedValue };
export declare type ShadowTarget = ProxyTarget;
export interface VirtualEnvironmentOptions {
    blueConnector: Connector;
    redConnector: Connector;
    distortionCallback?: DistortionCallback;
    instrumentation?: Instrumentation;
    liveTargetCallback?: LiveTargetCallback;
}
//# sourceMappingURL=types.d.ts.map