import type { ProxyTarget } from '@locker/near-membrane-shared/types';
import type { VirtualEnvironmentOptions } from './types';
export declare class VirtualEnvironment {
    private readonly blueCallableGetPropertyValuePointer;
    private readonly blueCallableLinkPointers;
    private readonly blueGetSelectedTarget;
    private readonly blueGetTransferableValue;
    private readonly blueGlobalThisPointer;
    private readonly redCallableEvaluate;
    private readonly redCallableGetPropertyValuePointer;
    private readonly redCallableLinkPointers;
    private readonly redCallableSetPrototypeOf;
    private readonly redCallableDefineProperties;
    private readonly redCallableInstallLazyPropertyDescriptors;
    private readonly redCallableTrackAsFastTarget;
    private readonly redGlobalThisPointer;
    constructor(options: VirtualEnvironmentOptions);
    evaluate(sourceText: string): any;
    lazyRemapProperties(target: ProxyTarget, ownKeys: PropertyKey[], unforgeableGlobalThisKeys?: PropertyKey[]): void;
    link(...keys: PropertyKey[]): void;
    remapProperties(target: ProxyTarget, unsafeBlueDescMap: PropertyDescriptorMap): void;
    remapProto(target: ProxyTarget, proto: object | null): void;
    trackAsFastTarget(target: ProxyTarget): void;
}
//# sourceMappingURL=environment.d.ts.map