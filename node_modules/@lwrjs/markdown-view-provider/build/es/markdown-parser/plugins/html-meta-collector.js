import visit from 'unist-util-visit';
import { isRelative } from '@lwrjs/shared-utils';
function imageVisitor(collector, node) {
    if (node.tagName === 'img') {
        const url = node.properties.src;
        collector.images.push({
            url,
            tagName: 'img',
            relative: isRelative(url),
            location: {
                startOffset: node.position?.start.offset || -1,
                endOffset: node.position?.end.offset || -1,
            },
        });
    }
}
export function htmlMetadataCollector(options) {
    const collector = options.collector;
    const internalMetaCollector = { images: [] };
    return function (tree) {
        visit(tree, 'element', imageVisitor.bind(undefined, internalMetaCollector));
        collector.images = internalMetaCollector.images;
    };
}
//# sourceMappingURL=html-meta-collector.js.map