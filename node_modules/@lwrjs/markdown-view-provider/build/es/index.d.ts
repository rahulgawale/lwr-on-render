import { ViewProvider, ProviderContext, LwrRoute, CompiledView, ViewIdentity, Watcher } from '@lwrjs/types';
import { MarkdownParser, MarkdownParserOptions } from './markdown-parser/markdown-parser.js';
interface MarkdownPluginConfig {
    parserOptions?: MarkdownParserOptions;
}
export default class MarkdownViewProvider implements ViewProvider {
    private emitter;
    private cachedViews;
    name: string;
    routes: LwrRoute[];
    watcher?: Watcher;
    markdown?: MarkdownParser;
    pluginConfig: MarkdownPluginConfig;
    constructor(pluginConfig: MarkdownPluginConfig | undefined, providerConfig: ProviderContext);
    onModuleChange(fileChanged: string): Promise<void>;
    initialize(): Promise<void>;
    getView(viewId: ViewIdentity): Promise<CompiledView | undefined>;
}
export {};
//# sourceMappingURL=index.d.ts.map