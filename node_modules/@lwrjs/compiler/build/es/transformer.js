import { logger } from '@lwrjs/shared-utils';
import esbuildEsm from 'esbuild';
// Workaround until this is fixed:
// https://github.com/evanw/esbuild/issues/706
let esbuild = esbuildEsm;
if (!esbuildEsm) {
    try {
        esbuild = require('esbuild');
    }
    catch {
        /* this is to support mjs/cjs dual impl */
    }
}
export function minify(source, options = {}) {
    const loader = options.fileType || 'js';
    return esbuild
        .transform(source, {
        loader,
        minify: true,
        // Remove assertions by tree shaking the computed expression
        define: { 'process.env.NODE_ENV': JSON.stringify('production') },
    })
        .catch((error) => {
        logger.debug(error);
        throw error;
    });
}
/**
 * Parse source to remove process.env.NODE_ENV without minify
 */
export function parse(source, options) {
    return esbuild
        .transform(source, {
        loader: 'js',
        minify: false,
        // Remove assertions by tree shaking the computed expression
        define: { 'process.env.NODE_ENV': JSON.stringify(options.envMode) },
    })
        .catch((error) => {
        logger.debug(error);
        throw error;
    });
}
//# sourceMappingURL=transformer.js.map