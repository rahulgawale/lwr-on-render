import fs from 'fs';
import path from 'path';
// eslint-disable-next-line @typescript-eslint/no-explicit-any
function recursiveJsonCollector(resources, currentPath, collector) {
    for (const resource of resources) {
        const resourcePath = path.join(currentPath, resource);
        if (resource.endsWith('.json')) {
            const resourceName = path.basename(resource, '.json');
            const jsonSource = JSON.parse(fs.readFileSync(resourcePath, 'utf-8'));
            collector[resourceName] = jsonSource;
        }
        else if (fs.statSync(resourcePath).isDirectory()) {
            const dirContentList = fs.readdirSync(resourcePath);
            collector[resource] = recursiveJsonCollector(dirContentList, resourcePath, {});
        }
    }
    return collector;
}
export function getGlobalData(globalDataDir, defaultData = {}) {
    if (!fs.existsSync(globalDataDir) || !fs.statSync(globalDataDir).isDirectory()) {
        return defaultData;
    }
    const dirContentList = fs.readdirSync(globalDataDir);
    return {
        ...recursiveJsonCollector(dirContentList, globalDataDir, {}),
        ...defaultData,
    };
}
//# sourceMappingURL=global-data.js.map