import fs from 'fs';
export async function writeStream(readStream, fullPath) {
    const writeStream = fs.createWriteStream(fullPath);
    readStream.pipe(writeStream);
    await new Promise((resolve, reject) => {
        readStream.on('end', () => resolve(readStream.read()));
        readStream.on('error', reject);
    });
}
export async function writeResponse(context, fullPath) {
    if (context.fs?.stream) {
        const stream = context.fs?.stream;
        await writeStream(stream, fullPath);
    }
    else if (context.fs?.body) {
        const body = context.fs?.body;
        if (isObject(body)) {
            fs.writeFileSync(fullPath, JSON.stringify(body), 'utf-8');
        }
        else {
            fs.writeFileSync(fullPath, body, 'utf-8');
        }
    }
}
/**
 * @param {*} o - Item to check if it's an object
 * @returns {boolean}
 */
export function isObject(o) {
    return typeof o === 'object' && o !== null && !Array.isArray(o);
}
//# sourceMappingURL=stream.js.map