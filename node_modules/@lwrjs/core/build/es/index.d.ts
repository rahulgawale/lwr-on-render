import { LwrGlobalConfig, NormalizedLwrGlobalConfig, ServerTypeImpl, PublicAppServer, ServerTypes } from '@lwrjs/types';
export declare class LwrApp {
    private app;
    private server;
    private initialized;
    private config;
    constructor(config?: LwrGlobalConfig);
    setConfig(config: LwrGlobalConfig): void;
    getConfig(): NormalizedLwrGlobalConfig;
    init(): Promise<void>;
    listen(callback?: ((opts: {
        serverMode: string;
        port: number;
    }) => void) | undefined): Promise<{
        serverMode: string;
        port: number;
    }>;
    close(): Promise<void>;
    getInternalServer<S extends ServerTypes>(): ServerTypeImpl<S>;
    getServer(): PublicAppServer<ServerTypes>;
}
export declare function createServer(config?: LwrGlobalConfig): LwrApp;
export declare function generateStaticSite(config?: LwrGlobalConfig): Promise<void>;
//# sourceMappingURL=index.d.ts.map