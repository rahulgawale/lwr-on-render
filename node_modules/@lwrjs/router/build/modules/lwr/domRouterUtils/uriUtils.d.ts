import type { UrlObject } from './types';
/**
 * helper: f(url) -> new URL
 * Query parameter values are URI decoded.

 * @param {string} url - URL string to turn into a URL object

 * @returns {object} { href, pathname, searchParams }

 * @example
 * {
 *      href: 'http://localhost:3001/products?lwr.mode=prod&lwr.locale=es#section',
 *      origin: 'http://localhost:3001',
 *      pathname: '/products',
 *      searchParams: {
 *          'lwr.mode': 'prod',
 *          'lwr.locale': 'es'
 *      }
 * }
 */
export declare function getUrlObject(url?: string): UrlObject;
/**
 * f(url) -> "/some/relative/path?param1=one&param2=two&param3"

 * @param {string} url - URL string to make relative, may be a no-op

 * @return {string}
 */
export declare function getRelativeUrl(url: string): string;
//# sourceMappingURL=uriUtils.d.ts.map