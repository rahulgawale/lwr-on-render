/**
 * Copyright (c) 2019, salesforce.com, inc.
 * All rights reserved.
 * SPDX-License-Identifier: MIT
 * For full license text, see the LICENSE file in the repo root or https://opensource.org/licenses/MIT
 */
/**
 * @param {*} o - Item to check if it's an object
 * @returns {boolean}
 */
export declare function isObject(o: unknown): boolean;
/**
 * true if input is string
 * @param o
 */
export declare function isString(o: unknown): boolean;
/**
 * @param {*} o - Object to freeze N layers deep (e.g. { prop: 'p', o: { one: 1, two: 2 } })
 */
export declare function freeze(o: object, depthLimit?: number): object;
/**
 * Return a 4 character identifier.
 */
export declare function guid(): string;
/**
 * f(route) -> true/false
 *
 * @param {*} route - Item to check if it's a valid route
 *
 * @returns {boolean}
 */
export declare function isValidRoute(object: unknown): boolean;
/**
 * Returns true if the given object is a valid pageReference.
 * @param object
 */
export declare function isValidPageReference(object: unknown): boolean;
//# sourceMappingURL=typeUtils.d.ts.map