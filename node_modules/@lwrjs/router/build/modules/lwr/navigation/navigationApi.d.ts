import type { ContextId } from 'lwr/navigationContext';
import type { PageReference } from 'lwr/router';
/**
 * Navigate programmatically.
 * The Promise used within is deliberately not returned.
 *
 * @param {HTMLElement} context - The navigation context
 * @param {object | string} loc - A route or URL for navigating
 * @param {*} options - Usually a boolean; when true the previous browser history
 *              entry should be replaced by this one
 */
export declare function navigate(context: ContextId, pageReference: PageReference, replace?: boolean): void;
/**
 * Generate a URL for the given route.
 *
 * @param {HTMLElement} context - The navigation context
 * @param {object} route - A route
 *
 * @returns {Promise<string>}
 */
export declare function generateUrl(context: ContextId, pageReference: PageReference): string | null;
//# sourceMappingURL=navigationApi.d.ts.map