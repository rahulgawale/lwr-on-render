import type { Watcher } from '@lwrjs/types';
import type { LwrRouterConfig } from '../index.js';
export declare const SPECIFIER_PREFIX = "@lwrjs/router/";
/**
 * Parse a specifier into its Router Config ID
 * Return undefined if the specifier is invalid
 * @param specifier - The raw specifier to parse
 */
export declare function parseSpecifier(specifier: string): string | undefined;
/**
 * Given a Router Config ID and directory, return the file path to the router metadata
 * @param dir       - Path to directory containing Router Config files
 * @param specifier - Specifier for the Router Config module
 */
export declare function getRouterConfigPath(dir: string, specifier: string): string;
/**
 * Set up a file system watcher; used to spy on Router Config file changes
 * @param onModuleChange - File change callback function
 */
export declare function setUpWatcher(onModuleChange: (file: string, deleted?: boolean) => void): Watcher;
/**
 * Generate a module string which fulfills a router request
 * @param routes - The array of route definitions
 */
export declare function generateModule(config?: LwrRouterConfig): string;
//# sourceMappingURL=utils.d.ts.map