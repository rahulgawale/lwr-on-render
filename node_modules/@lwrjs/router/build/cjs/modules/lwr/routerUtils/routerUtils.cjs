var __create = Object.create;
var __defProp = Object.defineProperty;
var __getProtoOf = Object.getPrototypeOf;
var __hasOwnProp = Object.prototype.hasOwnProperty;
var __getOwnPropNames = Object.getOwnPropertyNames;
var __getOwnPropDesc = Object.getOwnPropertyDescriptor;
var __markAsModule = (target) => __defProp(target, "__esModule", {value: true});
var __export = (target, all) => {
  for (var name in all)
    __defProp(target, name, {get: all[name], enumerable: true});
};
var __exportStar = (target, module2, desc) => {
  if (module2 && typeof module2 === "object" || typeof module2 === "function") {
    for (let key of __getOwnPropNames(module2))
      if (!__hasOwnProp.call(target, key) && key !== "default")
        __defProp(target, key, {get: () => module2[key], enumerable: !(desc = __getOwnPropDesc(module2, key)) || desc.enumerable});
  }
  return target;
};
var __toModule = (module2) => {
  return __exportStar(__markAsModule(__defProp(module2 != null ? __create(__getProtoOf(module2)) : {}, "default", module2 && module2.__esModule && "default" in module2 ? {get: () => module2.default, enumerable: true} : {value: module2, enumerable: true})), module2);
};

// packages/@lwrjs/router/src/modules/lwr/routerUtils/routerUtils.ts
__markAsModule(exports);
__export(exports, {
  createFilterChain: () => import_filterUtils.createFilterChain,
  decode: () => import_uriUtils.decode,
  encode: () => import_uriUtils.encode,
  freeze: () => import_typeUtils.freeze,
  getPageReferenceFromUriAndRouteDef: () => import_routeDefUtils.getPageReferenceFromUriAndRouteDef,
  getPageReferenceFromUrl: () => import_routeUtils.getPageReferenceFromUrl,
  getPathFromUrl: () => import_uriUtils.getPathFromUrl,
  getQueryFromUrl: () => import_uriUtils.getQueryFromUrl,
  getQueryString: () => import_uriUtils.getQueryString,
  getUrlFromPageReference: () => import_routeUtils.getUrlFromPageReference,
  getUrlFromPageReferenceAndRouteDef: () => import_routeUtils.getUrlFromPageReferenceAndRouteDef,
  guid: () => import_typeUtils.guid,
  hasDocument: () => import_domUtils.hasDocument,
  isObject: () => import_typeUtils.isObject,
  isValidRoute: () => import_typeUtils.isValidRoute,
  matchRouteByUrl: () => import_routeUtils.matchRouteByUrl,
  parseRoutes: () => import_parseUtils.parseRoutes,
  pathToRegexp: () => pathToRegexp
});
var import_filterUtils = __toModule(require("./filterUtils"));
var import_routeDefUtils = __toModule(require("./routeDefUtils"));
var import_routeUtils = __toModule(require("./routeUtils"));
var import_typeUtils = __toModule(require("./typeUtils"));
var import_parseUtils = __toModule(require("./parseUtils"));
var import_pathToRegexp = __toModule(require("./pathToRegexp"));
var import_uriUtils = __toModule(require("./uriUtils"));
var import_domUtils = __toModule(require("./domUtils"));
var pathToRegexp = {
  pathToRegexp: import_pathToRegexp.pathToRegexp,
  compile: import_pathToRegexp.compile
};
