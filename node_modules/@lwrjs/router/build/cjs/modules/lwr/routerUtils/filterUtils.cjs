var __defProp = Object.defineProperty;
var __markAsModule = (target) => __defProp(target, "__esModule", {value: true});
var __export = (target, all) => {
  for (var name in all)
    __defProp(target, name, {get: all[name], enumerable: true});
};

// packages/@lwrjs/router/src/modules/lwr/routerUtils/filterUtils.ts
__markAsModule(exports);
__export(exports, {
  createFilterChain: () => createFilterChain
});
function createFilterChain() {
  const filters = [];
  const empty = () => {
    return filters.length === 0;
  };
  const addSingle = (filter) => {
    if (typeof filter === "function") {
      filters.push(filter);
    }
  };
  const add = (f = []) => {
    if (Array.isArray(f)) {
      f.forEach((l) => addSingle(l));
    } else {
      addSingle(f);
    }
  };
  const compile = (arg) => {
    return filters.length === 0 ? Promise.resolve(true) : filters.reduce((previous, current) => {
      return previous.then((val) => {
        return val === false ? Promise.reject() : Promise.resolve(current(arg));
      });
    }, Promise.resolve(true)).then((val) => {
      return val === false ? false : true;
    }).catch((error) => {
      if (error instanceof Error) {
        throw error;
      } else {
        return false;
      }
    });
  };
  return {
    add,
    compile,
    empty
  };
}
