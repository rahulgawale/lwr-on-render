var __create = Object.create;
var __defProp = Object.defineProperty;
var __getProtoOf = Object.getPrototypeOf;
var __hasOwnProp = Object.prototype.hasOwnProperty;
var __getOwnPropNames = Object.getOwnPropertyNames;
var __getOwnPropDesc = Object.getOwnPropertyDescriptor;
var __markAsModule = (target) => __defProp(target, "__esModule", {value: true});
var __export = (target, all) => {
  for (var name in all)
    __defProp(target, name, {get: all[name], enumerable: true});
};
var __exportStar = (target, module2, desc) => {
  if (module2 && typeof module2 === "object" || typeof module2 === "function") {
    for (let key of __getOwnPropNames(module2))
      if (!__hasOwnProp.call(target, key) && key !== "default")
        __defProp(target, key, {get: () => module2[key], enumerable: !(desc = __getOwnPropDesc(module2, key)) || desc.enumerable});
  }
  return target;
};
var __toModule = (module2) => {
  return __exportStar(__markAsModule(__defProp(module2 != null ? __create(__getProtoOf(module2)) : {}, "default", module2 && module2.__esModule && "default" in module2 ? {get: () => module2.default, enumerable: true} : {value: module2, enumerable: true})), module2);
};

// packages/@lwrjs/router/src/modules/lwr/domRouterUtils/uriUtils.ts
__markAsModule(exports);
__export(exports, {
  getRelativeUrl: () => getRelativeUrl,
  getUrlObject: () => getUrlObject
});
var import_routerUtils = __toModule(require("lwr/routerUtils"));
function getUrlObject(url = "") {
  url = url || "";
  if (url.indexOf("://") < 0) {
    const port = window.location.port ? `:${window.location.port}` : "";
    const origin = `${window.location.protocol}//${window.location.hostname}${port}`;
    const prefix = url.charAt(0) === "/" ? "" : "/";
    url = origin + prefix + url;
  }
  const searchParams = {};
  const link = document.createElement("a");
  link.href = url;
  const queryStr = link.search.substring(1);
  if (queryStr) {
    queryStr.split("&").forEach((pair) => {
      const [key, value = ""] = pair.split("=");
      searchParams[(0, import_routerUtils.decode)(key)] = (0, import_routerUtils.decode)(value);
    });
  }
  return {
    href: link.href,
    origin: `${link.protocol}//${link.hostname}${link.port ? `:${link.port}` : ""}`,
    pathname: link.pathname.replace(/(\/)?/, "/"),
    searchParams
  };
}
function getRelativeUrl(url) {
  const urlObj = getUrlObject(url);
  const href = urlObj.href.replace(/:\d+/, "");
  const origin = urlObj.origin.replace(/:\d+/, "");
  return href.replace(origin, "");
}
