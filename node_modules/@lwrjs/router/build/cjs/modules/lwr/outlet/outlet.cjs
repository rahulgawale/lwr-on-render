var __create = Object.create;
var __defProp = Object.defineProperty;
var __getProtoOf = Object.getPrototypeOf;
var __hasOwnProp = Object.prototype.hasOwnProperty;
var __getOwnPropNames = Object.getOwnPropertyNames;
var __getOwnPropDesc = Object.getOwnPropertyDescriptor;
var __markAsModule = (target) => __defProp(target, "__esModule", {value: true});
var __export = (target, all) => {
  for (var name in all)
    __defProp(target, name, {get: all[name], enumerable: true});
};
var __exportStar = (target, module2, desc) => {
  if (module2 && typeof module2 === "object" || typeof module2 === "function") {
    for (let key of __getOwnPropNames(module2))
      if (!__hasOwnProp.call(target, key) && key !== "default")
        __defProp(target, key, {get: () => module2[key], enumerable: !(desc = __getOwnPropDesc(module2, key)) || desc.enumerable});
  }
  return target;
};
var __toModule = (module2) => {
  return __exportStar(__markAsModule(__defProp(module2 != null ? __create(__getProtoOf(module2)) : {}, "default", module2 && module2.__esModule && "default" in module2 ? {get: () => module2.default, enumerable: true} : {value: module2, enumerable: true})), module2);
};
var __decorate = (decorators, target, key, kind) => {
  var result = kind > 1 ? void 0 : kind ? __getOwnPropDesc(target, key) : target;
  for (var i = decorators.length - 1, decorator; i >= 0; i--)
    if (decorator = decorators[i])
      result = (kind ? decorator(target, key, result) : decorator(result)) || result;
  if (kind && result)
    __defProp(target, key, result);
  return result;
};

// packages/@lwrjs/router/src/modules/lwr/outlet/outlet.ts
__markAsModule(exports);
__export(exports, {
  default: () => outlet_default
});
var import_lwc = __toModule(require("lwc"));
var import_navigation = __toModule(require("lwr/navigation"));
var Outlet = class extends import_lwc.LightningElement {
  constructor() {
    super(...arguments);
    this.refocusOff = false;
    this.viewName = "default";
    this.viewCtor = void 0;
    this.previousViewCtor = void 0;
    this.hasError = false;
  }
  setView(currentView) {
    this.hasError = false;
    this.viewCtor = currentView;
    this.refocus();
  }
  renderedCallback() {
    if (this.viewCtor !== this.previousViewCtor) {
      this.previousViewCtor = this.viewCtor;
      const viewChangedEvent = new CustomEvent("viewchange", {detail: this.viewCtor});
      this.dispatchEvent(viewChangedEvent);
    }
  }
  errorCallback(e, stack) {
    this.hasError = true;
    const viewErrorEvent = new CustomEvent("viewerror", {detail: {error: e, stack}});
    this.dispatchEvent(viewErrorEvent);
    if (this.outletErrorCallback) {
      this.outletErrorCallback(e, stack);
    } else {
      console.error(e);
    }
  }
  refocus() {
    if (!this.refocusOff) {
      this.template.querySelector(`div[role='region']`).focus();
    }
  }
};
__decorate([
  import_lwc.api
], Outlet.prototype, "refocusOff", 2);
__decorate([
  import_lwc.api
], Outlet.prototype, "outletErrorCallback", 2);
__decorate([
  import_lwc.api
], Outlet.prototype, "viewName", 2);
__decorate([
  (0, import_lwc.wire)(import_navigation.CurrentView, {viewName: "$viewName"})
], Outlet.prototype, "setView", 1);
var outlet_default = Outlet;
