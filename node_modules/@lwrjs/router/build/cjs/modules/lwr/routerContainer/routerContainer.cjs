var __create = Object.create;
var __defProp = Object.defineProperty;
var __getProtoOf = Object.getPrototypeOf;
var __hasOwnProp = Object.prototype.hasOwnProperty;
var __getOwnPropNames = Object.getOwnPropertyNames;
var __getOwnPropDesc = Object.getOwnPropertyDescriptor;
var __markAsModule = (target) => __defProp(target, "__esModule", {value: true});
var __export = (target, all) => {
  for (var name in all)
    __defProp(target, name, {get: all[name], enumerable: true});
};
var __exportStar = (target, module2, desc) => {
  if (module2 && typeof module2 === "object" || typeof module2 === "function") {
    for (let key of __getOwnPropNames(module2))
      if (!__hasOwnProp.call(target, key) && key !== "default")
        __defProp(target, key, {get: () => module2[key], enumerable: !(desc = __getOwnPropDesc(module2, key)) || desc.enumerable});
  }
  return target;
};
var __toModule = (module2) => {
  return __exportStar(__markAsModule(__defProp(module2 != null ? __create(__getProtoOf(module2)) : {}, "default", module2 && module2.__esModule && "default" in module2 ? {get: () => module2.default, enumerable: true} : {value: module2, enumerable: true})), module2);
};
var __decorate = (decorators, target, key, kind) => {
  var result = kind > 1 ? void 0 : kind ? __getOwnPropDesc(target, key) : target;
  for (var i = decorators.length - 1, decorator; i >= 0; i--)
    if (decorator = decorators[i])
      result = (kind ? decorator(target, key, result) : decorator(result)) || result;
  if (kind && result)
    __defProp(target, key, result);
  return result;
};

// packages/@lwrjs/router/src/modules/lwr/routerContainer/routerContainer.ts
__markAsModule(exports);
__export(exports, {
  default: () => routerContainer_default
});
var import_lwc = __toModule(require("lwc"));
var import_utils = __toModule(require("./utils"));
var import_routerUtils = __toModule(require("lwr/routerUtils"));
var RouterContainer = class extends import_lwc.LightningElement {
  constructor() {
    super();
    this.historyDisabled = false;
    this.currentTitle = import_routerUtils.hasDocument ? document.title : "";
  }
  connectedCallback() {
    const config = {
      historyDisabled: this.historyDisabled,
      handleNavigation: this.handleNavigation.bind(this)
    };
    if (this.router) {
      this.routerApi = (0, import_utils.createNavigationContext)(this, config, this.router);
      this.routerApi.addPreNavigate(this.preNavigate.bind(this)).addPostNavigate(this.postNavigate.bind(this)).addErrorNavigate(this.errorNavigate.bind(this)).connect();
    }
  }
  preNavigate(routeChange) {
    const event = this._createEvent("prenavigate", routeChange, true);
    this.dispatchEvent(event);
    return !event.defaultPrevented;
  }
  postNavigate(routingResult) {
    this.dispatchEvent(this._createEvent("postnavigate", routingResult));
    const title = routingResult.routeDefinition.metadata && routingResult.routeDefinition.metadata.title;
    if (title) {
      this.currentTitle = title;
      document.title = title;
    }
    this.template.querySelector("span").innerHTML = this.currentTitle;
  }
  errorNavigate(error) {
    this.dispatchEvent(this._createEvent("errornavigate", error));
    return true;
  }
  handleNavigation(address, replace) {
    const event = this._createEvent("handlenavigation", {address, replace}, true);
    this.dispatchEvent(event);
    return !event.defaultPrevented;
  }
  disconnectedCallback() {
    if (this.routerApi) {
      this.routerApi.disconnect();
    }
  }
  _createEvent(name, payload, cancelable) {
    return new CustomEvent(name, {
      detail: payload,
      bubbles: false,
      composed: false,
      cancelable
    });
  }
};
__decorate([
  import_lwc.api
], RouterContainer.prototype, "router", 2);
__decorate([
  import_lwc.api
], RouterContainer.prototype, "historyDisabled", 2);
var routerContainer_default = RouterContainer;
