import createVirtualEnvironment from '@locker/near-membrane-node';
import fetch from 'node-fetch';
export default function runCode(codes, context) {
    return new Promise((resolve, reject) => {
        let resolver;
        const p = new Promise((r) => (resolver = r));
        function getContext() {
            return context;
        }
        const endowments = Object.getOwnPropertyDescriptors({
            getContext,
            fetch,
            resolver,
            // for AMD loader ModuleRegistry
            process,
            setTimeout,
            clearTimeout,
        });
        const ve = createVirtualEnvironment(globalThis, { endowments });
        try {
            ve.evaluate(codes.join('\n'));
            p.then(resolve);
        }
        catch (e) {
            reject(e);
        }
    });
}
//# sourceMappingURL=sandbox-locker.js.map