import { LwrAppBootstrapConfig, LwrLockerConfig, NormalizedLwrAppBootstrapConfig, NormalizedLwrErrorRoute, NormalizedLwrRoute } from '@lwrjs/types';
/**
 * Create the virtual source for the application bootstrap module with a worker root
 * @returns the generated source
 */
export declare function createAppWorkerBootstrapModule(workerSpecifier: string, route: NormalizedLwrRoute | NormalizedLwrErrorRoute, options: ModuleSourceOptions): string;
export declare function normalizeBootstrap(bootstrap?: LwrAppBootstrapConfig): NormalizedLwrAppBootstrapConfig;
interface ModuleSourceOptions {
    hmrEnabled: boolean;
    format: string;
    moduleLoader: string;
}
/**
 * Create the virtual source for the application bootstrap module
 * @returns the generated source
 */
export declare function createAppRouteViewBootstrapModule(route: NormalizedLwrRoute | NormalizedLwrErrorRoute, options: ModuleSourceOptions, lockerConfig: LwrLockerConfig): string;
export {};
//# sourceMappingURL=utils.d.ts.map