import { ModuleCompiled, ModuleEntry, ModuleProvider, ModuleSource, ProviderContext, AbstractModuleId, ProviderAppConfig } from '@lwrjs/types';
import { LwrLockerConfig } from 'packages/@lwrjs/types/src/config.js';
export default class AppModuleProvider implements ModuleProvider {
    name: string;
    version: string;
    lockerConfig: LwrLockerConfig;
    config: ProviderAppConfig;
    private hmrEnabled;
    constructor(appPluginConfig: unknown, { config, runtimeEnvironment: { hmrEnabled, lwrVersion } }: ProviderContext);
    getModuleEntry({ specifier }: AbstractModuleId): Promise<ModuleEntry | undefined>;
    getModuleSource<R extends AbstractModuleId>({ specifier, namespace, name, }: R): Promise<ModuleSource | undefined>;
    getModule(moduleId: AbstractModuleId): Promise<ModuleCompiled | undefined>;
}
//# sourceMappingURL=index.d.ts.map