import { ImportMetadata } from '../..';
declare type ResolveParams = {
    parentUrl: string;
};
export interface RegisterLoaderHooks {
    (hook: LoaderHooks): void;
}
export declare type LoaderHooks = {
    resolveModule?: ResolveModuleHook;
    loadModule?: LoadModuleHook;
    loadMapping?: LoadMappingHook;
};
export interface ResolveModuleHook {
    (id: string, params: ResolveParams): ResolveHookResponse;
}
export interface LoadModuleHook {
    (url: string, parentUrl: string): Promise<LoadHookResponse>;
}
export interface LoadMappingHook {
    (specifier: string, params: MappingResolveParams): Promise<MappingResponse> | MappingResponse;
}
export declare type MappingResolveParams = {
    knownModules: string[];
};
export declare type MappingResponse = ImportMetadata | null;
export declare type URLResponse = {
    url: string;
};
export declare type CustomResponse = {
    data: string;
    status: number;
    statusText?: string;
};
export declare type LoadHookResponse = CustomResponse | globalThis.Response | null;
export declare type ResolveHookResponse = URLResponse | string | null;
export {};
//# sourceMappingURL=loaderPlugins.d.ts.map