// TODO: This is a temporal workaround until https://github.com/salesforce/lwc/pull/2564 is sorted
// eslint-disable-next-line @typescript-eslint/ban-ts-comment
// @ts-ignore
import { hydrateComponent } from 'lwc';
export function toKebabCase(specifier) {
  return specifier.replace(/\/v\/[a-zA-Z0-9-_.]+$/, '').replace('/', '-').replace(/([A-Z])/g, c => `-${c.toLowerCase()}`);
}
/**
 * Hydrate the given component(s) which were server-side rendered (see the lwc-ssr/viewTransformer).
 * @param components - An array of arrays, each one holding:
 *                     0. a bare specifier
 *                     1. the corresponding LightningElement constructor
 * @param ssrProps - map of properties to set on each component
 * @example - [['x/appRoot', appCtor], ['x/nav', navCtor]]
 */

export function init(components, ssrProps = {}) {
  if (typeof document !== 'undefined') {
    components.forEach(([moduleSpecifier, ctor]) => {
      // Kebab-case the specifier
      const elementName = toKebabCase(moduleSpecifier); // Find all instances of the component in the document, and hydrate them all

      const customElements = document.querySelectorAll(elementName);
      customElements.forEach(customElement => {
        const propsId = customElement.dataset.lwrPropsId;
        const props = ssrProps[propsId] || {};
        hydrateComponent(customElement, ctor, props);
      });
    });
  }
}