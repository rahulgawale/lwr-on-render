import { AbstractModuleId, ModuleCompiled, ModuleEntry, ModuleProvider, ModuleSource, ProviderContext } from '@lwrjs/types';
export interface NpmModuleProviderConfig {
    external?: string[];
    polyfillNode?: boolean;
    useCompatResolution?: boolean;
}
export default class NpmModuleProvider implements ModuleProvider {
    name: string;
    private providerConfig;
    private webModulesCacheDir;
    private moduleEntryVersionCache;
    constructor(providerConfig: NpmModuleProviderConfig | undefined, { config: { cacheDir } }: ProviderContext);
    getModule(moduleId: AbstractModuleId): Promise<ModuleCompiled | undefined>;
    getModuleSource(moduleId: AbstractModuleId): Promise<ModuleSource | undefined>;
    getModuleEntry({ specifier, version }: AbstractModuleId): Promise<ModuleEntry | undefined>;
}
//# sourceMappingURL=index.d.ts.map