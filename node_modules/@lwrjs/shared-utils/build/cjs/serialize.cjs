var __defProp = Object.defineProperty;
var __markAsModule = (target) => __defProp(target, "__esModule", {value: true});
var __export = (target, all) => {
  for (var name in all)
    __defProp(target, name, {get: all[name], enumerable: true});
};

// packages/@lwrjs/shared-utils/src/serialize.ts
__markAsModule(exports);
__export(exports, {
  replaceStringFromLocation: () => replaceStringFromLocation,
  serializeModuleToJson: () => serializeModuleToJson
});
async function createJsonModule(moduleId, moduleRegistry, runtimeEnvironment, runtimeParams) {
  const {
    ownHash,
    moduleEntry: {version}
  } = await moduleRegistry.getModule(moduleId, runtimeParams);
  return {
    specifier: moduleId.specifier,
    version,
    ownHash,
    links: {
      self: moduleRegistry.resolveModuleUri(moduleId, runtimeEnvironment, runtimeParams, ownHash)
    }
  };
}
async function serializeModuleToJson(code = "", {
  specifier,
  version,
  ownHash,
  runtimeEnvironment,
  linkedConfig: {minified},
  moduleRecord: {imports = []}
}, moduleRegistry, runtimeParams) {
  const {format} = runtimeEnvironment;
  const dependencies = imports.map((dep) => createJsonModule(dep, moduleRegistry, runtimeEnvironment, runtimeParams));
  return {
    specifier,
    version,
    ownHash,
    dependencies: await Promise.all(dependencies),
    format,
    minified,
    code
  };
}
function replaceStringFromLocation(src, {startOffset, endOffset}, replaceValue) {
  return src.substr(0, startOffset) + replaceValue + src.substr(endOffset, src.length);
}
