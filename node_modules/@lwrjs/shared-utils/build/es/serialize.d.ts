import { LinkedModuleDefinition, ModuleJsonDefinition, ModuleRegistry, RuntimeParams } from '@lwrjs/types';
/**
 * Take a Module Definition and return its JSON serialization
 *
 * @param code - the compiled code string for the given module
 * @param param1 - the Module Definition to serialize
 * @param moduleRegistry
 * @returns - Promise to the JSON serialization of the module
 */
export declare function serializeModuleToJson(code: string | undefined, { specifier, version, ownHash, runtimeEnvironment, linkedConfig: { minified }, moduleRecord: { imports }, }: LinkedModuleDefinition, moduleRegistry: ModuleRegistry, runtimeParams?: RuntimeParams): Promise<ModuleJsonDefinition>;
/**
 * Replace a part of a source string at the indices with a different value
 *
 * @param src - source string
 * @param param1 - offset indices
 * @param replaceValue - replacement
 */
export declare function replaceStringFromLocation(src: string, { startOffset, endOffset }: {
    startOffset: number;
    endOffset: number;
}, replaceValue: string): string;
//# sourceMappingURL=serialize.d.ts.map