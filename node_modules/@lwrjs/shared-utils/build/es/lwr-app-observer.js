import { EventEmitter } from 'events';
const MODULE_DEF_CHANGED_EVENT = 'module_definition_changed';
const MODULE_SOURCE_CHANGED_EVENT = 'module_source_changed';
const VIEW_SOURCE_CHANGED_EVENT = 'view_source_changed';
const ASSET_SOURCE_CHANGED_EVENT = 'asset_source_changed';
class LwrEmitter {
    constructor(observer) {
        this.observer = observer;
    }
    notifyAssetSourceChanged(payload) {
        this.observer.emit(ASSET_SOURCE_CHANGED_EVENT, {
            eventType: ASSET_SOURCE_CHANGED_EVENT,
            payload,
        });
    }
    notifyViewSourceChanged(payload) {
        this.observer.emit(VIEW_SOURCE_CHANGED_EVENT, {
            eventType: VIEW_SOURCE_CHANGED_EVENT,
            payload,
        });
    }
    notifyModuleDefinitionChanged(payload) {
        this.observer.emit(MODULE_DEF_CHANGED_EVENT, {
            eventType: MODULE_DEF_CHANGED_EVENT,
            payload,
        });
    }
    notifyModuleSourceChanged(payload) {
        this.observer.emit(MODULE_SOURCE_CHANGED_EVENT, {
            eventType: MODULE_SOURCE_CHANGED_EVENT,
            payload,
        });
    }
}
export class LwrApplicationObserver extends EventEmitter {
    constructor() {
        super();
    }
    onModuleDefinitionChange(listener) {
        this.on(MODULE_DEF_CHANGED_EVENT, listener);
    }
    onModuleSourceChange(listener) {
        this.on(MODULE_SOURCE_CHANGED_EVENT, listener);
    }
    onViewSourceChange(listener) {
        this.on(VIEW_SOURCE_CHANGED_EVENT, listener);
    }
    onAssetSourceChange(listener) {
        this.on(ASSET_SOURCE_CHANGED_EVENT, listener);
    }
    createLwrEmitter() {
        return new LwrEmitter(this);
    }
}
//# sourceMappingURL=lwr-app-observer.js.map