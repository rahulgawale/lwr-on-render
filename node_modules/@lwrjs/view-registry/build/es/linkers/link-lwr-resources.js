import { getHtmlResources } from './view_bootstrap.js';
import { getHtmlResources as getLegacyHtmlResource } from './legacy_view_bootstrap.js';
export async function linkLwrResources(source, view, viewParams, cxt) {
    const { lwrResourcesId, ...resourceContext } = cxt;
    const LEGACY_LOADER = resourceContext.runtimeEnvironment?.featureFlags?.LEGACY_LOADER;
    const { partial, viewRecord } = LEGACY_LOADER
        ? await getLegacyHtmlResource(view, viewParams, resourceContext)
        : await getHtmlResources(view, viewParams, resourceContext);
    // Finally replace the token with the real resources
    return {
        renderedView: source.replace(lwrResourcesId, partial),
        viewRecord,
    };
}
//# sourceMappingURL=link-lwr-resources.js.map