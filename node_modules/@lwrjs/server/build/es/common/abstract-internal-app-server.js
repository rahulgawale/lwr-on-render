import crypto from 'crypto';
/**
 * Common code for internal server implementations
 */
export default class AbstractInternalAppServer {
    constructor() {
        this.internalRequestKey = crypto.randomBytes(16).toString('base64');
    }
    getInternalRequestKey() {
        return this.internalRequestKey;
    }
    // eslint-disable-next-line @typescript-eslint/explicit-module-boundary-types
    isMetadataRequest(headers) {
        const metadataRequestHeader = headers['lwr-metadata-request'];
        return metadataRequestHeader === this.internalRequestKey;
    }
}
//# sourceMappingURL=abstract-internal-app-server.js.map