var __defProp = Object.defineProperty;
var __markAsModule = (target) => __defProp(target, "__esModule", {value: true});
var __export = (target, all) => {
  for (var name in all)
    __defProp(target, name, {get: all[name], enumerable: true});
};

// packages/@lwrjs/server/src/express/express-request.ts
__markAsModule(exports);
__export(exports, {
  default: () => express_request_default
});
var ExpressRequest = class {
  constructor(expressRequest, isMetadataRequest) {
    this.req = expressRequest;
    this.isMetadataRequest = isMetadataRequest || false;
  }
  get params() {
    return this.req.params;
  }
  get originalUrl() {
    return this.req.originalUrl;
  }
  get path() {
    return this.req.path;
  }
  get query() {
    return this.req.query;
  }
  get body() {
    return this.req.body;
  }
  get method() {
    return this.req.method;
  }
  get headers() {
    return this.req.headers;
  }
  get protocol() {
    return this.req.protocol;
  }
  get locale() {
    return this.req.locale;
  }
  set locale(l) {
    this.req.locale = l;
  }
  acceptsLanguages() {
    return this.req.acceptsLanguages();
  }
  get(field) {
    return this.req.get(field);
  }
  cookie(key) {
    const rawCookies = (this.req.headers.cookie?.split(";") || []).map((c) => c.trim());
    const rawCookie = rawCookies.find((c) => c.startsWith(`${key}=`));
    return rawCookie ? decodeURIComponent(rawCookie.replace(`${key}=`, "")) : void 0;
  }
  hasJsonParam() {
    return this.req.query.json !== void 0;
  }
  isJsonRequest() {
    const acceptHeader = this.req.get("Accept") || "";
    const hasJsonHeader = acceptHeader.indexOf("application/json") >= 0;
    return hasJsonHeader || this.hasJsonParam();
  }
  isSiteGeneration() {
    return this.isMetadataRequest;
  }
  validateJsonRequest() {
    return !this.hasJsonParam() || this.req.accepts("json") === "json";
  }
  getRuntimeContext(defaultRuntimeEnvironment) {
    const {format, apiVersion, compat, locale, environment, bundleSpecifier} = this.req.params;
    const {debug} = this.req.query;
    return {
      runtimeEnvironment: {
        ...defaultRuntimeEnvironment,
        format: format ? format : defaultRuntimeEnvironment.format,
        compat: compat !== void 0 ? compat : defaultRuntimeEnvironment.compat,
        debug: debug !== void 0 ? true : defaultRuntimeEnvironment.debug,
        apiVersion: apiVersion ? apiVersion : defaultRuntimeEnvironment.apiVersion,
        bundle: bundleSpecifier !== void 0 ? true : false
      },
      runtimeParams: {
        locale: locale ? locale : this.req.locale ? this.req.locale : defaultRuntimeEnvironment.defaultLocale,
        environment
      }
    };
  }
};
var express_request_default = ExpressRequest;
