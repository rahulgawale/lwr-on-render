var __defProp = Object.defineProperty;
var __markAsModule = (target) => __defProp(target, "__esModule", {value: true});
var __export = (target, all) => {
  for (var name in all)
    __defProp(target, name, {get: all[name], enumerable: true});
};

// packages/@lwrjs/config/src/validation/helpers.ts
__markAsModule(exports);
__export(exports, {
  calculatePositionFromSource: () => calculatePositionFromSource
});
function calculatePositionFromSource(source, partialPosition) {
  const lines = source.split("\n");
  const {offset, length} = partialPosition;
  let countedChars = 0;
  for (const [index, line] of lines.entries()) {
    const newLength = countedChars + line.length;
    if (newLength >= offset - 1) {
      return {
        start: {
          line: index + 1,
          column: offset - countedChars
        },
        end: {
          line: index + 1,
          column: offset - countedChars + length
        }
      };
    }
    countedChars = newLength + 1;
  }
  throw new Error("Unable to calculate position from source: Unreachable offset");
}
