import fs from 'fs';
import path from 'path';
import { normalizeResourcePath } from '@lwrjs/shared-utils';
import { Loader } from 'nunjucks';
export class NunjucksCustomLoader extends Loader {
    constructor(config) {
        super();
        this.config = config;
    }
    getSource(templatePath) {
        const { rootDir, layoutsDir, contentDir, sourceDir } = this.config;
        templatePath = normalizeResourcePath(templatePath, {
            rootDir,
            layoutsDir,
            contentDir,
            assets: [],
        });
        const isAbsolute = path.isAbsolute(templatePath);
        const isRelative = templatePath.startsWith('./');
        const fullTemplatePath = isAbsolute
            ? templatePath
            : isRelative
                ? path.join(sourceDir, templatePath)
                : path.join(rootDir, templatePath);
        if (!fs.existsSync(fullTemplatePath)) {
            throw new Error(`Unable to resolve nunjucks template. File not found on: "${fullTemplatePath}"`);
        }
        const src = fs.readFileSync(fullTemplatePath, 'utf-8');
        this.emit('import', fullTemplatePath);
        return {
            src,
            path: fullTemplatePath,
            noCache: true,
        };
    }
}
export function addHelperMethods(nunjucksEnv) {
    nunjucksEnv.addGlobal('startsWith', 'function (s, sw) { return s.startsWith( sw )}');
}
//# sourceMappingURL=nunjucks-env-utils.js.map