export declare const unresolvable: {
    ASSET: (assetPath: string) => Omit<{
        category: "lwrUnresolvable/asset";
        message: string;
    }, "message" | "advice"> & {
        advice: import("../types.js").DiagnosticAdvice;
        message: string;
    };
    DIR_ALIAS: (assetPath: string) => Omit<{
        category: "lwrUnresolvable/asset";
        message: string;
    }, "message" | "advice"> & {
        advice: import("../types.js").DiagnosticAdvice;
        message: string;
    };
    MODULE: (moduleSpecifier: string) => Omit<{
        category: "lwrUnresolvable/module";
        message: string;
    }, "message" | "advice"> & {
        advice: import("../types.js").DiagnosticAdvice;
        message: string;
    };
    MODULE_ENTRY: (moduleSpecifier: string) => Omit<{
        category: "lwrUnresolvable/module";
        message: string;
    }, "message" | "advice"> & {
        advice: import("../types.js").DiagnosticAdvice;
        message: string;
    };
    LWC_MODULE: (name: string) => Omit<{
        category: "lwrUnresolvable/module";
        message: string;
    }, "message" | "advice"> & {
        advice: import("../types.js").DiagnosticAdvice;
        message: string;
    };
    SIGNED_MODULE: (moduleSpecifier: string, signature: string) => Omit<{
        category: "lwrUnresolvable/module";
        message: string;
    }, "message" | "advice"> & {
        advice: import("../types.js").DiagnosticAdvice;
        message: string;
    };
    RESOURCE: (resourceSpecifier: string) => Omit<{
        category: "lwrUnresolvable/resource";
        message: string;
    }, "message" | "advice"> & {
        advice: import("../types.js").DiagnosticAdvice;
        message: string;
    };
    SERVER_ERROR: (name: string) => Omit<{
        category: "lwrUnresolvable/fatal";
        message: string;
    }, "message" | "advice"> & {
        advice: import("../types.js").DiagnosticAdvice;
        message: string;
    };
    INVALID_JSON: () => Omit<{
        category: "lwrUnresolvable/invalid";
        message: string;
    }, "message" | "advice"> & {
        advice: import("../types.js").DiagnosticAdvice;
        message: string;
    };
    LABEL_MODULE: (file: string, error: string) => Omit<{
        category: "lwrUnresolvable/label";
        message: string;
    }, "message" | "advice"> & {
        advice: import("../types.js").DiagnosticAdvice;
        message: string;
    };
    ROUTES_MODULE: (file: string, error: string) => Omit<{
        category: "lwrUnresolvable/routes";
        message: string;
    }, "message" | "advice"> & {
        advice: import("../types.js").DiagnosticAdvice;
        message: string;
    };
};
//# sourceMappingURL=unresolvable.d.ts.map