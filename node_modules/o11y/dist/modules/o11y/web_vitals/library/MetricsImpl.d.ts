import { MetricsReporter } from '../interfaces';
import { BucketHistogramImpl } from './BucketHistogramImpl';
import { UpCounterImpl } from './UpCounterImpl';
import { ValueRecorderImpl } from './ValueRecorderImpl';
import { MetricsTags } from 'o11y/shared';
export declare class MetricsImpl implements MetricsReporter {
    private readonly _ownerName;
    private readonly _getOwnerAppName;
    private readonly _upCounters;
    private readonly _valueRecorders;
    private readonly _bucketHistograms;
    constructor(_ownerName: string, _getOwnerAppName: () => string);
    incrementCounter(operation: string, increment: number, hasError?: boolean, tags?: MetricsTags): void;
    trackValue(operation: string, value: number, hasError?: boolean, tags?: MetricsTags): void;
    bucketValue(operation: string, value: number, buckets: number[], hasError?: boolean, tags?: MetricsTags): void;
    private _bucketHistogram;
    private _upCounter;
    private _valueRecorder;
    getUpCounters(): UpCounterImpl[];
    getValueRecorders(): ValueRecorderImpl[];
    getBucketHistograms(): BucketHistogramImpl[];
    private _tagError;
    private _getKeyAndSortedTags;
}
