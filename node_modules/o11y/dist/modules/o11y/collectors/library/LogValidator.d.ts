import { Schema } from '../interfaces';
import { SchematizedData } from 'o11y/shared';
export declare const maxStringLengthAppLimit = 10000;
export declare const maxItemCountAppLimit = 10000;
export declare const enum ErrorCode {
    notAnError = 0,
    arrayExpected = 1,
    incorrectType = 2,
    infiniteNumber = 3,
    numberOutOfRange = 4,
    malformedBytesArray = 5,
    stringLengthOverflowAppLimit = 6,
    itemCountOverflowAppLimit = 7,
    stringLengthOverflow = 8,
    stringLengthUnderflow = 9,
    itemCountOverflow = 10,
    itemCountUnderflow = 11
}
export declare class ValidationEntry {
    errorCode: ErrorCode;
    fields: string[];
    expected?: string;
    received?: string;
    constructor(errorCode: ErrorCode, fields: string[], expected?: string, received?: string);
    asMessage(schemaId: string): string;
}
declare class LogValidator {
    validate(schema: Schema, data: SchematizedData, noThrow?: boolean): ValidationEntry[];
    private validateFields;
    private isNullOrUndefinedOrEmpty;
    private matchFieldTypes;
    private checkNumberRange;
}
export declare const logValidator: LogValidator;
export {};
