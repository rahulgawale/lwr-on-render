import { CoreEnvelopeContentsRaw } from 'o11y/core_envelope';
import { SchematizedData } from 'o11y/shared';
import { LogCollector, LogMeta, MetricsCollector, MetricsExtractorMethods, Schema } from '../interfaces';
import { SimpleCollectorOptions } from './interfaces/SimpleCollectorOptions';
export declare class SimpleCollector implements LogCollector, MetricsCollector {
    private readonly _messageBuffers;
    private readonly _staticAttributes;
    private readonly _precollectCallback;
    private _metricsExtractors;
    private _messageSize;
    private _isCollecting;
    constructor(options?: SimpleCollectorOptions);
    collect(schema: Schema, data: SchematizedData, logMeta: LogMeta): void;
    get estimatedByteSize(): number;
    get hasData(): boolean;
    get messagesCount(): number;
    get metricsCount(): number;
    getRawContentsOfCoreEnvelope(): CoreEnvelopeContentsRaw;
    receiveMetricsExtractors(metricsExtractors: MetricsExtractorMethods): void;
}
